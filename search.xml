<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Japanese Class Weekly Paragraph]]></title>
    <url>%2FJapanese-Class-Weekly-Paragraph%2F</url>
    <content type="text"><![CDATA[Our Japanese teacher asked us to talk about what we did last week as an oral exercise. It starts with one student asking another “週末は何をしましたか”。 The answer requires at least three sentences. We use the sentence structures taught and look up new words if necessary. The paragraphs here were what I prepared for each class. It can be a good record to show learning progress. I write Chinese sentences first, then translate them into Japanese. Chinese version below is very rough. It contains ideas more than the Japanese version. You can freely skip Chinese and read Japanese only. Template for Log123##**Japanese:****Chinese:*** 2017/11/19 WednesdayJapanese: 週末は うちで いました。アンキーへに 教科書の名詞[めいし]⓪と形容詞[けいようし]③ と 動詞[どうし]①を 入力[にゅうりょく]①しました。 私が日本の漫画を​​読んでみた。彼氏彼女の事情[じじょう]⓪ と カードキャプターさくら クリアカード 。難しかったです。どれも 終えなかった。有名な 動画[どうが] 魔法少女[しょうじょ]まどかを 見ました。 Chinese: 周末一直呆在家里把课本上名词动词形容词输入anki10000高频词汇里部分单词和书上单词合并 (不知道怎么说)试着读日本漫画，很难。尝试了彼男彼女的故事，魔法少女樱clear card。全部放弃魔法少女樱重新开始连载。看完了连载到现在为止的中文翻译看完了著名动画片魔法少女小圆重新看看了部分的魔法少女樱新看著名动画片 夏目友人账魔卡少女樱，她爸爸和最好的朋友都对樱用formal，樱对他们用informal。不是很理解为什么会这么使用。完全不理解从香港来的男主角为什么日语说得那么好 2017/11/29 WednesdayJapanese: thanksgivingに たくさん 買い物を しました。ドメイン名[めい]を 一つ 買いました。clinique の 商品[しょうひん] は２５％を引[ひ]いました。 cliniqueは 原寸[げんすん]◎の商品[しょうひん]と ろく piece を 送[おく]りました。でも、昨日 packageの中に 原寸[げんすん]◎の商品[しょうひん]が ありません。だから、cliniqueに オンライン chatで 聞きました。 Chinese: 在thanksgiving买了一些东西.买了一个域名.clinique打75折满65送full size的一个产品. 下了2单. 收到两封邮件, 一单已经发货, 一单的full size产品没有了. 花了一个小时打电话给客服追加新的优惠满65得到额外的6 piece. 昨天收到了发货的包裹, 却没有full size产品.在zara网站看中了一条裙子, 第二天去里. 店员说卖完了. 就逛zara, 买了2件衣服. これとこれ。打算做一个关于中文和日文的网站。周日周一写了script， 周一晚上做了slides。等制作完成后， 希望大家能看一下ビデオを 見て お願いします。 2017/12/06 WednesdayJapanese: ゆうめなanime kill la kill を 見ました。好きでも嫌いでもないです。先生に 来[らい] 学期[がっき] の 教科書を聞きました。Japanese for Busy Peopleを 使[つか]います。Book I は 漢字が ない たった平仮名が あります。Book IIは 漢字と平仮名が あります。ankiに 入力する前に online 辞書で 単語[たんご] を探[さが]します。たくさん 時間を使[つか]っているから、新しい教科書が 嫌いです。 Chinese: 看完动漫kill la kill问老师下个学期用什么教科书.第一本书全部是hiragana,第二本书才开始有kanji. 希望书里还是要有kanji“…To reduce the burden on busy learners, vocabulary and grammar has been limited to about a third of that typically introduced in beginners courses…”中国人学习有汉字的教科书会更快. 如果学第一本书， 在输入anki之前，所有的词汇都需要重新查online字典， 确定汉字。anki里别人根据这本书制作的deck都是hiragana， 这让我觉得很scary。若真的有人把hiragana的单词全部背下来， 就真的只能说， 而不能读。 只会说不会读，那是文盲。 2017/12/13Japanese 私は 最近 100日のWeb開発 チャレンジを はじめました。毎日は(no particles after everyday, today, tomorrow) 個人(if it’s your own, it’s 自分のブログに ログを書いて ツイッターへ 投稿しい(remove)ています。今日は 八日です。たくさん 時間を使[つか]っているから、日本語の勉強が 減少し(てい）ます。 Chinese 最近开始做100Daysof web development Challenge, 每天在个人的blog上记录, 然后发到twitter上. 今天是第8天. 因为这个原因, 每天花在日语上的时间减少.]]></content>
      <categories>
        <category>Japanese</category>
      </categories>
      <tags>
        <tag>Japanese</tag>
        <tag>Writing</tag>
        <tag>Speaking</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[100 Days Of Code: Data Analysis with R (Round 1)]]></title>
    <url>%2F100-Days-Of-Code-Round-1-R-data-analysis%2F</url>
    <content type="text"><![CDATA[Main Commitment: I will code to do data analysis for at least an hour every day for the next 100 days. Start Date: 2017-12-11 A companion project to 100 Days of Reading Paper. Rules I will code using R or do data analysis with other software (such as Python) for at least an hour every day. Projects are counted towards the challenge: statistical analysis projects in my work projects from dissertation competitions, such as Kaggle Activties are counted towards the challenge: understand datasets in excel import data into R clean data write codes to do exploratory analysis and apply statistical model write statistical reports Activities are not counted towards the challnege: write emails to clients meet with clients/supervisors I will tweet my progress every day, with the hashtag #100DaysOfCode and #100DaysOfDataScience and note which day of the challenge I’m on. I will encourage and support at least two people each day in the #100DaysOfDataScience challenge on Twitter. I can read at most 5 tweets about #100DaysOfDataScience every day. Less is more. Don’t spend more than enough time on the social networking website. 3 Options Like tweets Leave a comment (optional) Looking at their projects and giving them feedback (no more than 10 minutes per day) I will track my progress here and push to GitHub. I will only count the days where I spend at least some of my time building projects — not the days where I spend all my coding time working through lessons and tutorials. I will only skip a day if something important comes up. And when I resume, I won’t count the day I skipped as one of my 100 days. Some important additional considerations Don’t skip two days in a row, and try not to skip more than 1 day in 2 weeks. ReferenceHow to effectively scope your software projects from planning to execution The planning phase Define very specific goals for the project example: improve X by adding unit tests, supporting 20K queries per second, and reducing capped mean of user latency to &lt;= 200ms Explicitly define anti-goals, and separating must-haves and nice-to-haves. Minimize the batch size of the project by set up clear milestones and checkpoints for the project make it easy to launch only part of the project. Not only does this help break down the project, but it will also allow the team to pause or cut the project early if another, higher priority task comes up. De-risk the project as soon as possible. Two common ways of de-risking a project include working on the riskiest parts upfront prototyping the riskiest parts using dummy data and/or scaffolding. Whenever a new open-source system or external service is used, that usually represents a big risk. Don’t optimize for the total amount of work done. Instead, optimize for the total amount of impact over time. Once you’ve gotten the riskiest part out of the way, prioritize working on the part of the project that would result in the highest amount of impact immediately. Here’s one way to think about this: plot the impact of a project over time, where the Y-axis is impact, and the X axis is time. At the start of the project, the impact is 0%, and at the end of the project, the impact is 100%. You want to maximize the area under the curve by doing high ROI tasks first. Try to avoid rewriting big systems from scratch as much as possible. When doing a rewrite, we tend to underestimate how much work it would be be tempted to add new features and improvements build an overly complicated system because we are too focused on all the shortcomings of the first system. Instead of doing a big rewrite, consider incrementally replacing subsystems. Have good abstraction layers that support swapping out one part of the old system at a time, so you don’t need to wait for everything to be done to test the new system. The scoping phase Divide the project into small tasks, each taking two days or less. Define measurable milestones to get to the project goal. Schedule each with a specific calendar date representing when you expect this milestone to be reached. Then, establish some sort of external accountability on these milestones by, for example, committing them to your manager and setting up milestone check-ins. Think of project time estimates as probability distributions, not best-case scenarios. Instead of telling someone that a feature will be finished in 6 weeks, tell them something like “there’s a 50% likelihood of finishing the feature in 4 weeks, and a 90% chance we’d finish it in 8 weeks.” This tends to force people to be more realistic. Add buffer to account for: (1) Dev time != calendar time, due to meetings, interviews, and holidays. I usually multiply the dev time by 1.5 to get to the calendar time. (2) Unexpected project tasks time, since there are always tasks that you didn’t realize you need to do until much later. These tasks could include refactoring old code, debugging strange behaviors, or adding tests. The more experienced you are at scoping, the smaller this multiplier will get. Resist the temptation to under-scope. Be honest about how long tasks will take, not how long you or someone else (such as your manager or the Go To Market team) wants them to take. Use historical data. Keep track of whether you’ve tended to over scope or under scope projects in the past (most people tend to under scope). Adjust your scoping accordingly. Consider timeboxing open-ended parts of the project. Instead of “find the best stream processing framework for this system,” which can take months of research and prototyping, timebox it to “find a suitable streaming processing framework in a week.” Use your judgment here to balance this against incurring long-term operational overhead. The execution phase Re-scope regularly during the project execution. For each task, track how much time you estimated the task would take, then how long it actually took you to complete it. Do this for every measurable milestone. If your scoping is off by 50% for the first parts of the project, odds are your scoping will also be off by 50% for the rest of the project. Use milestones to answer “how’s the project going?” As engineers, it’s tempting to answer “it’ll be done by next week” or “until end of this month.” But these types of vague answers tend to create projects that are always 2 weeks away from being finished. Instead, use the (re-scoped) milestones to give a concrete answer based on how much work is left. Template for Log1234### Day : **Today&apos;s Progress (achievements and frustrations)**: **Thoughts and Emotions****Github Repo**: LOGDay 1: 2017-12-11Today’s Progress (achievements and frustrations):Thoughts and EmotionsGithub Repo:]]></content>
      <categories>
        <category>Programming Language</category>
        <category>100 Days Challenge</category>
        <category>R</category>
        <category>Data Science</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>100 Days Challenge</tag>
        <tag>data analysis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[100 Days Of Japanese (Round 1)]]></title>
    <url>%2F100-Days-Of-Japanese-Round-1%2F</url>
    <content type="text"><![CDATA[Main Commitment: I will recite Japanese words with Anki to increase Japanese vocabulary. Start Date: 2017-12-10 BackgroundI learned Japanese once per week for one semester at a night school around 10 years ago in China. I started learning Japanese this July. One day my friend asked me out to have lunch. During the meal, she said her Japanese first class of a session would begin at night. I was curious about how Americans learned Japanese, then audited the class. I was impressed by the teacher’s experience. Her native language is Chinese, the same with me. She had been lived in Japanese for 10 years and spoke English so fluently that American employees in the night school did not recognize that she was a foreigner. She is a talented and easy-going person. I enjoyed the class and decided to register one session. Each session has 10 classes, one class per week. I already finished one session with her and currently am taking the second session. Since August, I have been using Anki to recite Japanese words. Hence, the 100-day challenge should be easy for me. Rules I will review at least 100 Japanese cards in Anki every day. The words are from Genki books and core 10k words. One word has more than 5 cards. One hundred cards are not equal to 100 unique words. I will tweet my progress every day, with the hashtag #100DaysOfJapanese and note which day of the challenge I’m on. I will encourage and support at least two people each day in the #Anki #Japanese challenge on Twitter. I can read at most 5 tweets about #Anki #Japanese each day. Less is more. Don’t spend more than enough time on the social networking website. 3 Options Like tweets Leave a comment I will track my progress here and push to GitHub. I will only skip a day if something important comes up. And when I resume, I won’t count the day I skipped as one of my 100 days. Some important additional considerations Don’t skip two days in a row, and try not to skip more than 1 day in 2 weeks. Milestones 1 Day (Day 1: 2017-12-10 Sunday) 7 Days 30 Days 60 Days 90 Days 100 Days Template for Log1234### Day : **No. of Anki Cards**:**Time spent**:**Thoughts and Emotions:** LogDay 1: 2017-12-10 SundayNo. of Anki Cards: 292 Time spent: 34 minutes Thoughts and Emotions: I cannot concentrate on review Anki cards. A probable reason is a worry about whether I can get positive feedback. There are only 4 tweets under #100DaysOfJapanese. Too few people. Then I searched weibo, which is Chinese version counterpart of Twitter. People there either posted a picture to show their completion without showing process or stopped within 30 days. It is a little bit discouraging. I am not sure whether I should incorporate social media during the challenge. Day 2: 2017-12-11 MondayNo. of Anki Cards: 313 Time spent: 36 minutes Thoughts and Emotions: I am happy that I found the community in the twitter. #100DaysOfJapanese is not a right hashtag. People use #Anki #Japanese to indicate they use Anki to learn Japanese. Day 3: 2017-12-12 TuesdayNo. of Anki Cards: 525 Time spent: 62 minutes Thoughts and Emotions: There are over 600 cards in the backlog. In recent days, I focus on reviewing old cards; no new cards. Day 4: 2017-12-13 WednesdayNo. of Anki Cards: 886 Time spent: 104 minutes Thoughts and Emotions:I cleared the backlog. What a relief! Tomorrow I can recite new words. Day 5: 2017-12-14 ThursdayNo. of Anki Cards: 576 (100 new cards) Time spent: 72 minutes Thoughts and Emotions: 100 new cards]]></content>
      <categories>
        <category>100 Days Challenge</category>
        <category>Japanese</category>
      </categories>
      <tags>
        <tag>100 Days Challenge</tag>
        <tag>Japanese</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[100 Days Of Code: Web Development (Round 1)]]></title>
    <url>%2F100-Days-Of-Web-Development-Round-1%2F</url>
    <content type="text"><![CDATA[Main Commitment: I will make projects to develope front-end develoment skill. Start Date: 2017-12-07 Rules I will code to make projects from FreeCodeCamp for at least an hour every day. I will tweet my progress every day, with the hashtag #100DaysOfCode #freecodecamp and note which day of the challenge I’m on. I will track my progress here and push to GitHub. My daily job is not related to front-end development. All time spent on working on web development will count towards the challenge. I will only skip a day if something important comes up. And when I resume, I won’t count the day I skipped as one of my 100 days. I will encourage and support at least two people each day in the #100DaysOfCode #freecodecamp challenge on Twitter. I can read at most 5 tweets about #100DaysOfCode #freecodecamp each day. Less is more. Don’t spend more than enough time on the social networking website. 3 Options Like tweets Leave a comment (optional) Looking at their projects and giving them feedback (no more than 10 minutes per day) Some important additional considerations Don’t skip two days in a row, and try not to skip more than 1 day in 2 weeks. Milestones 1 Day (Day 1: 2017-12-06 Wednesday) 7 Days (Day 7: 2017-12-12 Monday) 30 Days 60 Days 90 Days 100 Days Template for Log12345### Day : **Link**: [Github Repo]() | [Project :]()**Today&apos;s Progress (achievements and frustrations)**: **Thoughts and Emotions:****Tomorrow&apos;s plan** LOGDay 1: 2017-12-06 WednesdayLink: Github Repo | Project 1: Tribue Today’s Progress (achievements and frustrations): finished the first project “Build a Tribute Page”. Thoughts and Emotions: I finished the tutorials of Bootstrap and jQuery. After that, I started the first project “Build a Tribute Page”. Zhuge Liang is a historical figure that I admire. I feel excited to make a tribute page to him. Today is the first time I use Bootstrap though I heard it a lot in the past. This tool is awesome. It’s an intense work. Luckily, all questions along the way were solved by myself. It took around 3 hours. Day 2: 2017-12-07 ThursdayLink: Github Repo | Project 2: Personal Portfolio Today’s Progress (achievements and frustrations): Started the second project “Personal Portfolio”. Worked on toggle button and scrollspy for at least 4 hours. Finally solved. Thank @keller0 Cai and @meitounaoqiao 殷蔚乔 for help in FreeCodeCamp/chinese. Thoughts and Emotions:I already have had a personal website, and my daily job is not website development. But I want to have a fancy project page. My purpose to do the “Personal Protolio” project is to list my projects in all fields I am interested in, such as data science, web development. In the future, the list of fields will increase. The project page is ready for it. Today is a tough day. “Personal Portfolio” is a difficult project. I spent several hours in navigation which uses scrollspy and toggle button. There are some differences in scrollspy between Bootstrap 3 and Bootstrap 4. I felt discouraged and wasted time. Then I decided to seek help online. This is a right decision. FreeCodeCamp/chinese is the channel most suitable for me. Reference: Scroll @Bootstrap 4 Scroll @Bootstrap 4 beta Navbar togglers Day 3: 2017-12-08 FridayLink: Github Repo | Project 2: Personal Portfolio Today’s Progress (achievements and frustrations): edit the first section add 100-DAY CHALLENGES section change Awesome Font Icon from 4 to 5 Thoughts and Emotions: I am a little bit depressed today. The whole day I searched one content on iPad lying in bed. At night I got up, had dinner, took a shower, and did laundry. And then I started resuming doing the yesterday’s work. Even if I made big progress yesterday, I spent almost all day to work the project. It is very bad. Other important things are pushed away, and this will increase my stress level. The result is that I will burn out more easily and the probability of quitting the 100-day challenge will increase. I promised myself at around 6 that I would do the project for one hour. To make it work, I set a timer. Sadly, I broke the promise and worked much longer than I promised. It is 3 a.m. now. Today I almost finished the 2nd project Personal Portfolio except for one problem: collapsable menu. This is an example from w3 school. When the screen is small, the menu is collapsed. When I open the menu, the menu is overlapped with the content below. I posted the question in the gitter of FreeCodeCamp. I will go to sleep and hope that the answer will appear tomorrow. Day 4: 2017-12-09 SaturdayLink: Github Repo | Project 2: Personal Portfolio Today’s Progress (achievements and frustrations): changed color scheme added jump to top button asked yesterday’s question in FreeCodeCamp forum because I got no answer in the gitter Finished Project 2: Personal Portfolio Thoughts and Emotions: I started coding at 12 a.m. because I spent a lot of time during the day in freeing up space for Mac Air to install Mac OS High Sierra. Initially, I planned to finish project 2 in one hour and spend two hours in fact. The final color scheme of the website still looks strange. After I learn following courses in FreeCodeCamp in the future, I can polish the website. Finishing one not-perfect product is better than a never-finish product. Day 5: 2017-12-10 SundayLink: Github Repo | Project 3: Random Quote Machine Today’s Progress (achievements and frustrations): Project 2 “Personal Portfolio” amendment added padding to the right of icons added icons in front of titles of sections Started Project 3 “Random Quote Machine” Thoughts and Emotions: There are lots of JavaScript tutorials before project 3 in freeCodeCamp. If I start projects until finishing tutorials, I will forget much knowledge I have learned so far, and it will be harder to continue 100DaysCoder challenge. I plan to complete CSS part of projects and started Javascript part until I studied all JavaScript tutorials. Today’s plan was 2-hour tutorial and 1-hour coding. Studying tutorials for 2 hours was as planned. However, I spent much more time in coding than one hour. It is hard to start and harder to stop. It happens to all aspects of my life. I do not know how to solve it. Happiness was generated when one-hour coding was completed. Stress increased as time came by after one hour. I am happy that I found a useful Atom plugin Auto-live-server . It refreshed the local webpage when web development related files are saved. There is one problem I asked in the gitter. Button’s border style is not consistent with different browsers. Here is my code. 12345678910button &#123; color: white; background-color: pink; box-shadow: 0; border:none;&#125; button:focus &#123; border:none;&#125; Chrome has a border around the button after I click it. Safari and codepen do not have the border. Tomorrow’s plan study tutorial for 1 hour (not count towards the challenge) Project 3 Random Quotes Machine move CSS to main.css rethink how to structure css file adjust the width of border of quotes adjust the size of social media icons Project 2 Project Portolio look for a picture for Project 2 change Project 2 status from Ongoing to Complete add Project 3 and set it Ongoing create a new challenge Day 6: 2017-12-11 MondayLink: Github Repo | Project 2: Personal Portfolio Github Repo | Project 3: Random Quote Machine Today’s Progress (achievements and frustrations): completed the plan set yesterday!! Project 2 Project Portolio move CSS to main.css move JavaScript to /scripts Styling using pure CSS takes a lot of time. Adding a graph is simpler and more beautiful. Thoughts and Emotions: Before learning in freecodecamp, I thought front-end development incorporated designing websites. I like coding part but not designing. Two parts are knitted together during the process of learning. Projects showing from other students in freecodecamp are more beautiful than my page. This made me feel bad. It is satisfying to change project status from “ongoing” to “complete” and add new projects to my project portfolio page. Again, when I started doing projects, it is hard to stop. Now is 12 a.m. Tomorrow’s plan study tutorial for 1 hour (not count towards the challenge) Start to do the html part of Project 4: the Local Weather for one hour only. Don’t overdo. Day 7: 2017-12-12 TuesdayLink: Github Repo | Project 4: the Local Weather Today’s Progress (achievements and frustrations): I finished all items on the todo list created yesterday. Thoughts and Emotions: It is the 7th day!! I have been doing this challenge for one week. It is the 2nd milestone 😃 Though HTML part of Project 4 is simpler than that of Project 3, I was amazed that I finished building it in one and half an hour including time of seeking help in gitter. The files of HTML and CSS are clean, and the logic of codes are clear. I am satisfied with what have been done today. I will start to code HTML part of Project 5 tomorrow. The project is cool because of both functionality and design. One hour per day is devoted to learning tutorials in FreeCodeCamp. The progress will be slow. I am overwhelmed by the number of lessons needed to learn before I can touch JavaScript part of Project 3-5. Basic algorithm scripting based on FreeCodeCamp can require around 50 hours!!! Tomorrow’s plan Study tutorial for 1 hour (not count towards the challenge) Work on suggestion from gitter Start to do the HTML part of Project 5: Build a Wikipedia Viewer for one hour only. Don’t overdo. 1234567Sorin Ruse @sorinr 22:05@huyingjie add also in css background-repeat: no-repeat; to the body selector @huyingjie and also background-attachment: fixed; to make the img full width/height even when you resize the screen Sorin Ruse @sorinr 22:12@huyingjie you may also look into positioning the background and apply the one that fits your needs &lt;https://developer.mozilla.org/en-US/docs/Web/CSS/background-position&gt; Day 8: 2017-12-13 WednesdayLink: Github Repo | Project 2: Personal Portfolio Today’s Progress (achievements and frustrations): Study tutorial for 1 hour (not count towards the challenge) Work on suggestion from gitter Start to do the HTML part of Project 5: Build a Wikipedia Viewer for one hour only. Don’t overdo. Add Project 4 to project page Thoughts and Emotions: The time spent on adding new projects to project page was longer than I expected. The list of projects is formatted by decks with Bootstrap 4. I feel the design is a little bit uncomfortable but don’t know why. At the end of today’s task, I asked the question in FreeCodeCamp forum. There is no time to touch project 5 today. It will be tomorrow’s task. Basic algorithm scripting based on FreeCodeCamp can require around 50 hours. This makes me feel nervous. The best way to remove the negative emotion is to have a try. I did one algorithm and learned the format of algorithm scripting. The problems in the section are to use JavaScript array methods learned in the last section. Array methods are similar to Swift I learned 2 years ago. Even though I forgot the details of Swift, familiarity can help me learn counterparts in JavaScript. Tomorrow’s plan Start to do the HTML part of Project 5: Build a Wikipedia Viewer for one hour only. Don’t overdo. Read answers in FreeCodeCamp forum. Day 9: 2017-12-14 ThursdayLink: Github Repo | Project 2: Personal Portfolio Today’s Progress (achievements and frustrations): I read the reply to Personal Portfolio site feedback in FreeCodeCamp forum. The reply gave 6 points needed to improve. 5 points I solved today Make sure the items have a bit of space around them on smaller screens. On a mobile they go right to the edge of the screen, which looks a bit cramped. Solution: add padding: 80px to .section 123456section &#123; border-style: solid; border-width: 0px 0px 0px 0px; box-shadow: 0px 2px rgb(160,160,160); padding: 80px;&#125; Make sure the images align - the ‘Ongoing’ header seems to push the image down a bit further than the ones on completed projects. Originally, I used &lt;span class=&quot;fa-layers fa-fw fa-2x&quot;&gt;. After deleting fa-2x, it became &lt;span class=&quot;fa-layers fa-fw&quot;&gt; and the problem solved. 123456&lt;span class="fa-layers fa-fw"&gt; &lt;div class="fa-3x"&gt; &lt;i class="fas fa-certificate text-danger"&gt;&lt;/i&gt; &lt;span class="fa-layers-text fa-inverse text-warning" data-fa-transform="shrink-11.5 rotate--30 right-5"&gt;NEW&lt;/span&gt; &lt;/div&gt;&lt;/span&gt; The sections could do with a bit more vertical spacing at the bottom Solution: add padding: 80px to .section The same with the first one. It’s Code not Codes Solution: replace Codes with Code There’s a broken link to style.css Solution: delete the link 1 point I did not solve On intermediate screen sizes the items get very narrow - maybe reduce the number of items per row sooner Thoughts and Emotions: Making small adjustments or improvements to the website can take as much time as making one. I spent over 1 hour in correcting Project 2: Personal Portfolio only. It is a little bit discouraging because I have included starting Project 5 in tomorrow’s plan for two days, but there is no time left for this project. Tomorrow’s plan Start to do the HTML part of Project 5: Build a Wikipedia Viewer for one hour only. Don’t overdo. Day 10: 2017-12-15 FridayLink: Github Repo | Project 5: A Wikipedia Viewer Today’s Progress (achievements and frustrations): Started project 5 Thoughts and Emotions: I finally started Project 5. Among the only 5 projects, this is the first project which uses jQuery. I am excited to see the page has animation; if a user clicks the search icon, the search bar will appear and the search icon will disappear. It is fun. Tomorrow’s plan Project 5: A Wikipedia Viewer Adjust the style of search bar Make the search icon and the search bar the same height Change action field to search button Adjust animation If search bar is empty, click search button, the search bar will disappear and the search icon will appear. If search bar is not empty, searching action is activated Add footer to Project 3: Random Quote Machine Add footer to Project 4: the Local Weather]]></content>
      <categories>
        <category>100 Days Challenge</category>
        <category>Web Development</category>
      </categories>
      <tags>
        <tag>100 Days Challenge</tag>
        <tag>Web Development</tag>
        <tag>HTML</tag>
        <tag>CSS</tag>
        <tag>jQuery</tag>
        <tag>Bootstrap</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[100 Days Of Reading Paper (Round 1)]]></title>
    <url>%2F100-Days-Of-Reading-Paper-Round-1%2F</url>
    <content type="text"><![CDATA[The supporting project is 100 Days Of Code Round 1 (R, data analysis) Main Commitment: I will read paper for at least an hour every day for the next 100 days. Start Date: 2017-12-05 Reference: How to effectively scope your software projects from planning to execution Rules I will read paper for at least an hour every day. I will tweet my progress every day, with the hashtag #100DaysOfReadingPaper and note which day of the challenge I’m on. I will track my progress here and push to GitHub. If I read as part of my job, I will count that time towards the challenge. I will only skip a day if something important comes up. And when I resume, I won’t count the day I skipped as one of my 100 days. Some important additional considerations Don’t skip two days in a row, and try not to skip more than 1 day in 2 weeks. Template for Log1234### Day : **Today&apos;s Progress (achievements and frustrations)**: **Thoughts and Emotions****Github Repo**: LOGDay :Today’s Progress (achievements and frustrations):Thoughts and EmotionsGithub Repo:]]></content>
      <categories>
        <category>100 Days Challenge</category>
      </categories>
      <tags>
        <tag>100 Days Challenge</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Add disqus comment system in Jekyll]]></title>
    <url>%2FAdd-disqus-comment-system-in-Jekyll%2F</url>
    <content type="text"><![CDATA[The following steps are to add disqus comment system in all posts. It requires global setting in the _config.yml file. In comparison, the official disqus tutorial adds front matter to each post to indicate whether comments are shown or not. Add following codes to the _config.yml file: 1234# Disqus settingsdisqus_username: DISQUSNAMElayout: defaultcomments: true Click the Universal Embeded Code text in the Jekyll install instructions page in disqus website. Copy codes in the first step on the page. Open and edit post.html below the _layouts folder. Find the place where you will put comments. Paste codes from Step 3.]]></content>
      <categories>
        <category>Mix</category>
      </categories>
      <tags>
        <tag>Jekyll</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[How to show math formula in Jekyll]]></title>
    <url>%2FShow-math-formula-in-Jekyll%2F</url>
    <content type="text"><![CDATA[There are only two steps to add functionality of showing math formular in Jekyll. MathJax is the engine to achive it. open the file default.html in the folder _layouts add the following codes before ` 12345&lt;script type="text/x-mathjax-config"&gt;MathJax.Hub.Config(&#123;tex2jax: &#123;inlineMath: [['$','$'], ['\\(','\\)']]&#125;&#125;);&lt;/script&gt;&lt;script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;&lt;/script&gt;&lt;link href="/assets/css/syntax.css" rel="stylesheet" &gt; Test:Add the following codes to your posts to test whether MathJax is working. the inline mode Code: 12 In physics, the mass-energy equivalence is statedby the equation $E=mc^2$, discovered in 1905 by Albert Einstein. Desired result: In physics, the mass-energy equivalence is statedby the equation $E=mc^2$, discovered in 1905 by Albert Einstein. the display mode Code: 12345678910The mass-energy equivalence is described by the famous equation$$E=mc^2$$discovered in 1905 by Albert Einstein.In natural units ($c$ = 1), the formula expresses the identity\begin&#123;equation&#125;E=m\end&#123;equation&#125; Desired result: The mass-energy equivalence is described by the famous equation $$E=mc^2$$ discovered in 1905 by Albert Einstein. In natural units ($c$ = 1), the formula expresses the identity \begin{equation} E=m \end{equation}]]></content>
      <categories>
        <category>Mix</category>
      </categories>
      <tags>
        <tag>Jekyll</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[How to Uninstall R underMac OS X]]></title>
    <url>%2Fhow-to-uninstall-r-under-mac-os-x%2F</url>
    <content type="text"><![CDATA[When updating R on Mac, we can uninstall the old version and install the new version. Uninstalling R is very easy on Mac. During installation of R, at least 2 folders are involved. /Applications/R.app folder: contains GUI /Library/Frameworks/R.framework folder: contains R framework (unkown) /usr/bin : contains some linksWhen uninstalling, R under Mac OS X will delete all of them. Uninstallation steps as follows: open terminal in Mac OS X run rm -rf /Library/Frameworks/R.framework /Applications/R.app \ /usr/bin/R /usr/bin/RscriptDone! Reference: http://cran.r-project.org/doc/manuals/r-release/R-admin.html#Uninstalling-under-OS-X]]></content>
      <categories>
        <category>Programming Language</category>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[It is a correct choice to buy Mac Pro!]]></title>
    <url>%2Fits-a-correct-choice-to-buy-mac-pro%2F</url>
    <content type="text"><![CDATA[I usually saw some tutorials in youtube about how to use softwares. There is a high probability that people in the video used Mac to teach how to program. In the past, I feel doubt that why it happened. Last year, in the thanksgiving’s shopping season ($150 off), I decided to buy 13 inch, not too big and heavy, not too small. In the store, it was easy for me to confuse which one to buy, Mac Pro or Mac Air. The employee in the NYU Mac store said price performance ratio was better. She recommended that it was better to buy Mac Air if Mac was my secondary computer. Finally, I made the decision to buy Mac Pro 13 inch because its CPU was better than Mac Air and storage was bigger. Last week, my experience told me that it is one of the most valuable items purchased last year. I did one problem about kernel smoothing method and used guassian kernel. The training data set was big with over 7000 observations and 56 predictors. All the predictors had to be used to generate guassian kernals for each observation in test data. Then I programmed the process to create guassian kernals. For each test data, it took about 3 minutes to generate the wights. I felt it was too slow then run the same program in Lenovo Thinkpad T420. It cost third times time. One of my classmates used Mac Air to program, she could not know when the program would stop but the same program was run in Mac Pro in several seconds. Big difference! A computer with faster CPU is very important. It recalled me the time last semester. A lot of programming were required for bayesian class. Some programs were slow. If I used Mac Pro at that time, less time would be put in my homework and I did not need to stay up every week!]]></content>
      <categories>
        <category>Mix</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[How long to write a book?]]></title>
    <url>%2FHow-long-to-write-a-book%2F</url>
    <content type="text"><![CDATA[How long to write a book? No correct answer to this question. My sensibility always admire people who can write the book as quickly as possible because the speed implies that they have high productivity and other abilities. My intellects know my sensibility is wrong. How to marry intellects and sensibility? I do not have answer to this question, either. One thing can be confirmed that good books take time. How long? Several years. Eric Novik planned to write a book recently, 8 chapter and over 300 pages. He asked Prof. Gelman: The work seems overwhelming. I always wondered how you manage to produce such high volume of high quality content. What’s the secret?Prof. Gelman replied in his blog:The first secret is, I wouldn’t try to write a book in 6 to 8 months. The first edition of Bayesian Data Analysis took several years. Each new edition took awhile too. So if “long and arduous” to you means “6 to 8 months,” I think your time management skills are already much better than mine!]]></content>
      <categories>
        <category>Mix</category>
      </categories>
      <tags>
        <tag>writing</tag>
      </tags>
  </entry>
</search>
